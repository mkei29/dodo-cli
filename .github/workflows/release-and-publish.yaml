# This workflow combines release and publish-docs workflows
name: release-and-publish
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'version.txt') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Git
        run : |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "toritorineko29@gmail.com"
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Go generate
        run: |
           go generate ./src
           git add -A
           git commit -m "chore: incorporate go generate"
      - name: Set tag
        id: tag
        run: |
          VERSION=$(cat version.txt)
          git tag $VERSION
          git push origin $VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-docs:
    needs: release
    if: ${{ always() && (needs.release.result == 'success' || needs.release.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dodo CLI
        run: |
          curl https://raw.githubusercontent.com/toritoritori29/dodo-cli/main/download.sh | sh -
      - name: Publish docs
        run: |
          ./dodo-cli upload
        env:
          DODO_API_KEY: ${{ secrets.DODO_ACCESS_KEY }}
